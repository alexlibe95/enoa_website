---
// Clean Decap CMS implementation
---

<!DOCTYPE html>
<html lang="el">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content="noindex, nofollow" />
    <title>Διαχείριση Περιεχομένου - ENOA</title>
    <link rel="icon" type="image/png" href="/favicon.png" />
    
    <!-- CSP for CMS scripts -->
    <meta http-equiv="Content-Security-Policy" content="script-src 'self' 'unsafe-inline' 'unsafe-eval' https://identity.netlify.com https://unpkg.com; style-src 'self' 'unsafe-inline'; object-src 'none';" />
  </head>
  <body>
    <!-- CMS will mount here -->
    <div id="nc-root"></div>

    <script>
      // Load scripts dynamically to handle CORS better
      function loadScript(src, callback) {
        const script = document.createElement('script');
        script.src = src;
        script.onload = callback;
        script.onerror = function() {
          console.error('Failed to load script:', src);
          callback(new Error('Script load failed'));
        };
        document.head.appendChild(script);
      }

      // Load scripts in sequence
      document.addEventListener('DOMContentLoaded', function() {
        console.log('🔄 Loading CMS scripts...');
        
        // Try multiple CDNs for Decap CMS
        const cmsUrls = [
          'https://unpkg.com/decap-cms@3.0.14/dist/decap-cms.js',
          'https://cdn.jsdelivr.net/npm/decap-cms@3.0.14/dist/decap-cms.js'
        ];
        
        // Try to load Netlify Identity (optional for local dev)
        loadScript('https://identity.netlify.com/v1/netlify-identity-widget.js', function(error) {
          if (error) {
            console.warn('⚠️ Netlify Identity not loaded (OK for local dev)');
          } else {
            console.log('✅ Netlify Identity loaded');
          }
        });

        // Load CMS with fallback
        function loadCMS(urlIndex = 0) {
          if (urlIndex >= cmsUrls.length) {
            showError('Δεν ήταν δυνατή η φόρτωση του CMS από κανένα CDN');
            return;
          }

          loadScript(cmsUrls[urlIndex], function(error) {
            if (error) {
              console.warn(`Failed to load from ${cmsUrls[urlIndex]}, trying next...`);
              loadCMS(urlIndex + 1);
            } else {
              console.log('✅ CMS script loaded from:', cmsUrls[urlIndex]);
              setTimeout(initializeCMS, 500);
            }
          });
        }

        loadCMS();
      });

      function initializeCMS() {
        try {
          // Verify CMS is available
          if (typeof CMS === 'undefined') {
            throw new Error('CMS object not available');
          }

          console.log('🔧 Initializing CMS...');

          // Initialize with minimal config to avoid conflicts
          CMS.init({
            config: {
              backend: {
                name: 'git-gateway',
                branch: 'main'
              },
              local_backend: true,
              media_folder: 'public/images',
              public_folder: '/images',
              locale: 'el',
              collections: [
                {
                  name: 'pages',
                  label: 'Σελίδες',
                  folder: 'content/pages',
                  create: true,
                  slug: '{{slug}}',
                  fields: [
                    { label: 'Τίτλος', name: 'title', widget: 'string' },
                    { label: 'Κείμενο', name: 'body', widget: 'markdown' }
                  ]
                },
                {
                  name: 'news',
                  label: 'Νέα',
                  folder: 'content/news',
                  create: true,
                  slug: '{{year}}-{{month}}-{{day}}-{{slug}}',
                  fields: [
                    { label: 'Τίτλος', name: 'title', widget: 'string' },
                    { label: 'Περίληψη', name: 'excerpt', widget: 'text' },
                    { label: 'Ημερομηνία', name: 'publishDate', widget: 'datetime' },
                    { label: 'Κείμενο', name: 'body', widget: 'markdown' }
                  ]
                }
              ]
            }
          });

          // Greek localization
          CMS.registerLocale('el', {
            auth: {
              login: 'Σύνδεση',
              loggingIn: 'Συνδέεστε...'
            },
            app: {
              header: {
                content: 'Περιεχόμενο',
                media: 'Πολυμέσα'
              }
            }
          });

          console.log('✅ CMS initialized successfully');

        } catch (error) {
          console.error('❌ CMS initialization failed:', error);
          showError(`Σφάλμα αρχικοποίησης: ${error.message}`);
        }
      }

      function showError(message) {
        const root = document.getElementById('nc-root');
        if (root) {
          root.innerHTML = `
            <div style="padding: 40px; text-align: center; font-family: Arial, sans-serif;">
              <h1 style="color: #dc3545;">Σφάλμα CMS</h1>
              <p>${message}</p>
              <button onclick="location.reload()" style="padding: 10px 20px; margin-top: 20px; background: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer;">
                Επανα-φόρτωση
              </button>
            </div>
          `;
        }
      }

      // Netlify Identity handling
      if (window.netlifyIdentity) {
        window.netlifyIdentity.on("init", user => {
          if (!user) {
            window.netlifyIdentity.on("login", () => {
              document.location.href = "/admin/";
            });
          }
        });
      }
    </script>
  </body>
</html>
</html>